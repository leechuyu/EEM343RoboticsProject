<?xml version="1.0"?>
<launch>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find myrobotdescription)/worlds/project2.world"/> 
		<arg name="paused" value="false"/>
		<arg name="use_sim_time" value="true"/>
		<arg name="gui" value="true"/>
		<arg name="recording" value="false"/>
		<arg name="debug" value="false"/>
	</include>

	<!-- Load the URDF into the parameter server -->
	<param name="robot_description" textfile='$(find myrobotdescription)/urdf/my_robot_description.urdf' />

	<!-- Spin up the node that will spawn the robot model is defined in the URDF -->
	<node 
		name="spawn_urdf" 
		pkg="gazebo_ros" 
		type="spawn_model" 
		args="-param robot_description -urdf -model my_robot_description" 
	/> 

	  <!-- Robot state publisher -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="50.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>

	<!-- joint_state_controller -->
	<rosparam file="$(find myrobotdescription)/controller/joint_state_controller.yaml" command="load"/>
	<node 
		name="joint_state_controller_spawner" 
		pkg="controller_manager" 
		type="controller_manager" 
		args="spawn 
		joint_state_controller" 
		respawn="false" 
		output="screen"
	/>

	<!-- Load controller file to parameter server -->
	<rosparam file="$(find myrobotdescription)/controller/water_controller.yaml" command="load"/>

	<!-- Spin up the controller node -->
	<node 
		name="water_controller_spawner" 
		pkg="controller_manager" 
		type="controller_manager" 
		args="spawn water_controller" respawn="false" output="screen"
	/>

	<rosparam file="$(find myrobotdescription)/controller/sensor_controller.yaml" command="load"/>

	<!-- Spin up the controller node -->
	<node 
		name="sensor_controller_spawner" 
		pkg="controller_manager" 
		type="controller_manager" 
		args="spawn sensor_controller" respawn="false" output="screen"
	/>


	<rosparam command="load" file="$(find myrobotdescription)/config/joint_names_my_robot_description.yaml"/>

	<include file="$(find myrobotdescription)/launch/planning_context.launch" >
		<arg name="load_robot_description" value="true" />
	</include>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="/use_gui" value="false"/>
		<rosparam param="/source_list">[/joint_states]</rosparam>
	</node>

	<include file="$(find myrobotdescription)/launch/move_group.launch">
		<arg name="publish_monitored_planning_scene" value="true" />
	</include>

	<include file="$(find myrobotdescription)/launch/moveit_rviz.launch">
		<arg name="config" value="true"/>
	</include>



</launch>
